import org.apache.tools.ant.filters.ReplaceTokens;

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

war.archiveName="ROOT.war"

version = '1.0'

repositories {
    mavenCentral()
    maven {
        url "http://repo.springsource.org/release"
    }

    maven {
        credentials {
            username 'dev'
            password 'WLf2NBk9WuFc376'
        }
        url "http://build.erecyclingcorps.com:8081/artifactory/libs-release-local"
    }
    
    maven { url "http://repo.springsource.org/libs-milestone" }
    maven { url "http://repo.springsource.org/libs-snapshot" }
    maven { url 'http://repo.spring.io/milestone' }
}

configurations {
    all*.exclude group: 'commons-logging', module: 'commons-logging'
}

dependencies {
	providedCompile (
		'org.apache.tomcat:jasper:6.0.37'
  		,'javax.servlet:javax.servlet-api:' + servletApiVersion
	)
	
	compile project(':ce-search-common')
	compile project(':ce-search-dao')

    compile (
		'org.springframework:spring-core:' + springVersion
  		,'org.springframework:spring-web:' + springVersion
  		,'org.springframework:spring-webmvc:' + springVersion
  		,'org.springframework:spring-orm:' + springVersion
  		,'jstl:jstl:1.2'
  		,'commons-collections:commons-collections:3.2'
  		,'org.slf4j:jcl-over-slf4j:'+slf4jVersion
  		,'org.slf4j:slf4j-api:'+slf4jVersion
  		,'org.slf4j:slf4j-log4j12:'+slf4jVersion
  		,'log4j:log4j:1.2.16'
  		,'org.springframework.security:spring-security-core:'+springSecurityVersion
  		,'org.springframework.security:spring-security-web:'+springSecurityVersion
  		,'org.springframework.security:spring-security-config:'+springSecurityVersion
  		,'org.springframework.security:spring-security-taglibs:'+springSecurityVersion
  		,'org.aspectj:aspectjweaver:'+aspectjVersion
  		,'org.codehaus.jackson:jackson-mapper-asl:1.9.12'
  		,'com.fasterxml.jackson.core:jackson-databind:2.3.0'
  		,'org.apache.commons:commons-io:1.3.2'
  		,'org.hibernate:hibernate-validator:5.1.3.Final'
  		,'commons-fileupload:commons-fileupload:1.3.1'
  	)
  	
  	runtime (
    		'log4j:log4j:1.2.16'
    )
    
    testCompile (
    	'junit:junit:4.8.2'
    )
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

war {
	filesMatching("**/*.properties") {
		filter(ReplaceTokens, tokens: project.props)
	}
}

task explodedWar(type: Copy) {
    into "$buildDir/web"
    with war
}
